//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Web.Api.DataAccess.MemberFeedback
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MemberFeedbackEntities : DbContext
    {
        public MemberFeedbackEntities()
            : base("name=MemberFeedbackEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AuditLog> AuditLogs { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<CNFG_Category> CNFG_Category { get; set; }
        public virtual DbSet<CNFG_FeedbackType> CNFG_FeedbackType { get; set; }
        public virtual DbSet<CNFG_FunctionalArea> CNFG_FunctionalArea { get; set; }
        public virtual DbSet<CNFG_ReportDate> CNFG_ReportDate { get; set; }
        public virtual DbSet<CNFG_Source> CNFG_Source { get; set; }
        public virtual DbSet<CNFG_Status> CNFG_Status { get; set; }
        public virtual DbSet<CNFG_SystemUser> CNFG_SystemUser { get; set; }
        public virtual DbSet<MemberFeedback> MemberFeedbacks { get; set; }
        public virtual DbSet<MemberFeedback_History> MemberFeedback_History { get; set; }
        public virtual DbSet<vw_MemberFeedbackDetails> vw_MemberFeedbackDetails { get; set; }
    
        [DbFunction("MemberFeedbackEntities", "udf_get_StringInput")]
        public virtual IQueryable<udf_get_StringInput_Result> udf_get_StringInput(string strInputList)
        {
            var strInputListParameter = strInputList != null ?
                new ObjectParameter("strInputList", strInputList) :
                new ObjectParameter("strInputList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<udf_get_StringInput_Result>("[MemberFeedbackEntities].[udf_get_StringInput](@strInputList)", strInputListParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<usp_rpt_MemberFeedback_Detail_Result> usp_rpt_MemberFeedback_Detail(Nullable<System.DateTime> dteStart, Nullable<System.DateTime> dteEnd, string strTypeID, string strSource, string strCategoryID)
        {
            var dteStartParameter = dteStart.HasValue ?
                new ObjectParameter("dteStart", dteStart) :
                new ObjectParameter("dteStart", typeof(System.DateTime));
    
            var dteEndParameter = dteEnd.HasValue ?
                new ObjectParameter("dteEnd", dteEnd) :
                new ObjectParameter("dteEnd", typeof(System.DateTime));
    
            var strTypeIDParameter = strTypeID != null ?
                new ObjectParameter("strTypeID", strTypeID) :
                new ObjectParameter("strTypeID", typeof(string));
    
            var strSourceParameter = strSource != null ?
                new ObjectParameter("strSource", strSource) :
                new ObjectParameter("strSource", typeof(string));
    
            var strCategoryIDParameter = strCategoryID != null ?
                new ObjectParameter("strCategoryID", strCategoryID) :
                new ObjectParameter("strCategoryID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_rpt_MemberFeedback_Detail_Result>("usp_rpt_MemberFeedback_Detail", dteStartParameter, dteEndParameter, strTypeIDParameter, strSourceParameter, strCategoryIDParameter);
        }
    
        public virtual ObjectResult<usp_rpt_MemberFeedback_Source_Summary_Result> usp_rpt_MemberFeedback_Source_Summary(Nullable<System.DateTime> dteStart, Nullable<System.DateTime> dteEnd)
        {
            var dteStartParameter = dteStart.HasValue ?
                new ObjectParameter("dteStart", dteStart) :
                new ObjectParameter("dteStart", typeof(System.DateTime));
    
            var dteEndParameter = dteEnd.HasValue ?
                new ObjectParameter("dteEnd", dteEnd) :
                new ObjectParameter("dteEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_rpt_MemberFeedback_Source_Summary_Result>("usp_rpt_MemberFeedback_Source_Summary", dteStartParameter, dteEndParameter);
        }
    
        public virtual ObjectResult<usp_rpt_MemberFeedback_Summary_Result> usp_rpt_MemberFeedback_Summary(Nullable<System.DateTime> dteStart, Nullable<System.DateTime> dteEnd, Nullable<int> intGroupingType)
        {
            var dteStartParameter = dteStart.HasValue ?
                new ObjectParameter("dteStart", dteStart) :
                new ObjectParameter("dteStart", typeof(System.DateTime));
    
            var dteEndParameter = dteEnd.HasValue ?
                new ObjectParameter("dteEnd", dteEnd) :
                new ObjectParameter("dteEnd", typeof(System.DateTime));
    
            var intGroupingTypeParameter = intGroupingType.HasValue ?
                new ObjectParameter("intGroupingType", intGroupingType) :
                new ObjectParameter("intGroupingType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_rpt_MemberFeedback_Summary_Result>("usp_rpt_MemberFeedback_Summary", dteStartParameter, dteEndParameter, intGroupingTypeParameter);
        }
    
        public virtual ObjectResult<usp_rpt_MemberFeedback_Trend_Result> usp_rpt_MemberFeedback_Trend(Nullable<System.DateTime> dteEnd, string strTypeID, string strSource, string strCategoryID)
        {
            var dteEndParameter = dteEnd.HasValue ?
                new ObjectParameter("dteEnd", dteEnd) :
                new ObjectParameter("dteEnd", typeof(System.DateTime));
    
            var strTypeIDParameter = strTypeID != null ?
                new ObjectParameter("strTypeID", strTypeID) :
                new ObjectParameter("strTypeID", typeof(string));
    
            var strSourceParameter = strSource != null ?
                new ObjectParameter("strSource", strSource) :
                new ObjectParameter("strSource", typeof(string));
    
            var strCategoryIDParameter = strCategoryID != null ?
                new ObjectParameter("strCategoryID", strCategoryID) :
                new ObjectParameter("strCategoryID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_rpt_MemberFeedback_Trend_Result>("usp_rpt_MemberFeedback_Trend", dteEndParameter, strTypeIDParameter, strSourceParameter, strCategoryIDParameter);
        }
    }
}
